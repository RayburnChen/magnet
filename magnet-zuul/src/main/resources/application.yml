server:
  port: 8080
  servlet:
    session:
      cookie:
        name: ${spring.application.name}
spring:
  application:
    name: magnet-zuul
  data:
    mongodb:
      uri: mongodb://localhost:27017/${spring.application.name}
  sleuth:
    sampler:
      probability: 0.0
eureka:
  instance:
    preferIpAddress: true
    leaseRenewalIntervalInSeconds: 10
    leaseExpirationDurationInSeconds: 20
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka
zuul:
  ribbonIsolationStrategy: SEMAPHORE
  host:
    connect-timeout-millis: 3000
    socket-timeout-millis: 3000
    time-unit: MILLISECONDS
  threadPool:
    useSeparateThreadPools: true
    threadPoolKeyPrefix: zuulgw
  ignoredServices: '*'
  ignoreSecurityHeaders: true
  sensitiveHeaders: Cookie,Set-Cookie,Authorization
  routes:
    athena:
      path: /athena/**
      sensitiveHeaders: null
      strip-prefix: true
      serviceId: MAGNET-ATHENA
    permission:
      path: /permission/**
      sensitiveHeaders: null
      strip-prefix: true
      serviceId: MAGNET-AUTH
ribbon:
  ReadTimeout: 3000
  SocketTimeout: 3000
proxy:
  auth:
    loadBalanced: true
    routes:
      athena: oauth2
      permission: passthru
security:
  oauth2:
    client:
      client-id: magnet-client
      client-secret: passw0rd
      grant-type: implicit
      access-token-uri: http://localhost:8090/oauth/token
      user-authorization-uri: http://localhost:8090/oauth/authorize
    resource:
      token-info-uri: http://localhost:8090/oauth/check_token
      preferTokenInfo: true
#    sso:
#      login-path: http://localhost:8080/permission/login
logging:
  file: log/${spring.application.name}.log
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always
info:
  app:
    name: ${spring.application.name}
    port: ${server.port}