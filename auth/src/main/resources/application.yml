server:
  port: 8090
  servlet:
    session:
      cookie:
        name: ${spring.application.name}
spring:
  application:
    name: magnet-auth
  data:
    mongodb:
      uri: mongodb://localhost:27017/${spring.application.name}
  sleuth:
    sampler:
      probability: 0.0
  mvc:
    throw-exception-if-no-handler-found: true
    favicon:
      enabled: false
    view:
      prefix: /pages/
      suffix: .html
  security:
    oauth2:
      client:
        registration:
          my-client-1:
            client-name: Magnet Client
            client-id: magnet-client
            client-secret: passw0rd
            scope: read, write
            provider: my-oauth-provider
            client-authentication-method: basic
            authorization-grant-type: password
            redirect-uri: http://localhost:8080/login
        provider:
          my-oauth-provider: 
            authorization-uri: http://localhost:8090/oauth/authorize
            token-uri: http://localhost:8090/oauth/token
            user-info-uri: http://localhost:8090/oauth/check_token
            jwk-set-uri: http://localhost:8090/oauth/token_key
#      authorization:
#        check-token-access: fullyAuthenticated
#        token-key-access: fullyAuthenticated
eureka:
  instance:
    preferIpAddress: true
    leaseRenewalIntervalInSeconds: 30
    leaseExpirationDurationInSeconds: 90
    status-page-url-path: /actuator/info
    health-check-url-path: /actuator/health
  client:
    fetch-registry: true
    registry-fetch-interval-seconds: 30
    log-delta-diff: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka
logging:
  file: log/${spring.application.name}.log
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always
info:
  app:
    name: ${spring.application.name}
    port: ${server.port}